# Plantilla Nginx con HTTPS (Let's Encrypt webroot)
# Se sustituye ${SERVER_NAME} vía envsubst al arrancar el contenedor

# Variable para WebSocket (contexto http)
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# Servidor HTTP (80): sólo ACME y redirección a HTTPS
server {
  listen 80;
  server_name ${SERVER_NAME};

  # Webroot para validación ACME (Let’s Encrypt)
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # Resto: redirige a HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

# Servidor HTTPS (443)
server {
  listen 443 ssl http2;
  server_name ${SERVER_NAME};

  # Certificados emitidos por Let’s Encrypt
  ssl_certificate     /etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${SERVER_NAME}/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  # Tamaño máximo de cuerpo si subes archivos
  client_max_body_size 20m;

  # Gzip básico
  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/xml+rss text/javascript;

  # (Opcional) Servir ACME también por 443
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # Proxy inverso a la app
  location / {
    proxy_pass http://app:3000/;

    # Cabeceras estándar
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Timeouts
    proxy_connect_timeout 5s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # WebSocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }
}

